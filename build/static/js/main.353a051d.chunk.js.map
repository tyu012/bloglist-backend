{"version":3,"sources":["components/LoginForm.js","components/BlogList.js","components/NewBlogForm.js","components/Notification.js","components/Togglable.js","services/users.js","reducers/usersReducer.js","components/Users.js","components/UserDetailed.js","components/Blog.js","components/Navbar.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","services/login.js","reducers/userReducer.js","App.js","store.js","index.js"],"names":["LoginForm","props","handleLogin","username","setUsername","password","setPassword","onSubmit","className","id","type","value","name","onChange","target","BlogList","blogs","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","map","blog","style","to","title","NewBlogForm","React","forwardRef","ref","submitBlog","useState","setTitle","author","setAuthor","url","setUrl","useImperativeHandle","event","preventDefault","likes","displayName","Notification","contents","isShowing","text","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","onClick","buttonLabel","children","getUsers","a","axios","get","response","data","setUsersList","users","dispatch","usersReducer","state","action","User","length","Users","useDispatch","useSelector","store","useEffect","usersService","u","UserDetailed","user","filter","b","Blog","likeBlog","removeBlog","handleLike","handleRemove","window","confirm","showToPoster","href","ActiveUserStatus","logout","Navbar","navbarItemStyle","padding","listStyleType","margin","backgroundColor","baseUrl","token","getAll","then","setToken","newToken","submit","config","headers","Authorization","post","like","newBlog","put","deleteBlog","delete","initialState","success","showNotification","time","setTimeout","hideNotification","notificationReducer","undefined","byDescendingLikes","b1","b2","createBlog","blogService","console","log","likedBlog","blogReducer","concat","sort","login","credentials","setUser","newUser","checkIfUserLoggedIn","currentUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","userReducer","App","notification","newBlogFormTogglable","useRef","newBlogForm","matchingUserId","useRouteMatch","userDetailedId","find","params","matchingBlogId","matchingBlog","handleSubmitBlog","current","handleLikeBlog","handleRemoveBlog","removeItem","path","removeblog","reducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.353a051d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = props => {\n  const {\n    handleLogin,\n    username,\n    setUsername,\n    password,\n    setPassword,\n  } = props\n\n  return (\n    <form onSubmit={handleLogin}>\n      <div className=\"loginField\">\n        username\n        <input\n          id=\"usernameInput\"\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div className=\"loginField\">\n        password\n        <input\n          id=\"passwordInput\"\n          type=\"text\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button id=\"loginButton\" type=\"submit\">login</button>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  setUsername: PropTypes.func.isRequired,\n  password: PropTypes.string.isRequired,\n  setPassword: PropTypes.func.isRequired,\n}\n\nexport default LoginForm","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst BlogList = props => {\n  const { blogs } = props\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div>\n      {blogs.map(blog =>\n        <div key={blog.id} style={blogStyle}>\n          <Link to={`/blogs/${blog.id}`}>\n            {blog.title}\n          </Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default BlogList","import React, { useState, useImperativeHandle } from 'react'\n\nconst NewBlogForm = React.forwardRef((props, ref) => {\n  const {\n    submitBlog,\n  } = props\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleBlogSubmission = event => {\n    event.preventDefault()\n    submitBlog({\n      title,\n      author,\n      url,\n      likes: 0,\n    })\n  }\n\n  useImperativeHandle(ref, () => {\n    return { title, setTitle, author, setAuthor, url, setUrl }\n  })\n\n  return (\n    <form onSubmit={handleBlogSubmission}>\n      <div>\n        title:\n        <input\n          id=\"blogFormTitle\"\n          type=\"text\"\n          value={title}\n          name=\"title\"\n          onChange={({ target }) => setTitle(target.value)}\n        />\n      </div>\n      <div>\n        author:\n        <input\n          id=\"blogFormAuthor\"\n          type=\"text\"\n          value={author}\n          name=\"author\"\n          onChange={({ target }) => setAuthor(target.value)}\n        />\n      </div>\n      <div>\n        url:\n        <input\n          id=\"blogFormUrl\"\n          type=\"text\"\n          value={url}\n          name=\"url\"\n          onChange={({ target }) => setUrl(target.value)}\n        />\n      </div>\n      <button id=\"blogFormSubmit\" type=\"submit\">create</button>\n    </form>\n  )\n})\n\nNewBlogForm.displayName = 'NewBlogForm'\n\nexport default NewBlogForm","import React from 'react'\n\nconst Notification = ({ contents, isShowing }) => {\n  const text = contents ? contents.text : null\n\n  if (isShowing) {\n    return (\n      <div>{text}</div>\n    )\n  } else {\n    return (<div></div>)\n  }\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <div className=\"togglable\">\n      <div style={hideWhenVisible}>\n        <button\n          className=\"togglableButton\"\n          onClick={toggleVisibility}\n        >\n          {props.buttonLabel}\n        </button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getUsers }","import usersService from '../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_USERS_LIST':\n      return action.data\n    default:\n      return state\n  }\n}\n\nconst setUsersList = users => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_USERS_LIST',\n      data: users\n    })\n  }\n}\n\nexport const updateUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getUsers()\n    dispatch(setUsersList(users))\n  }\n}\n\nexport default usersReducer","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUsers } from '../reducers/usersReducer'\nimport { Link } from 'react-router-dom'\n\nconst Users = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(store => store.users)\n\n  useEffect(() => {\n    dispatch(updateUsers())\n  }, [])\n\n  return (\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>blogs created</th>\n          </tr>\n          {users.map(u =>\n            <User name={u.name} blogs={u.blogs} key={u.id} id={u.id}/>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst User = ({ name, blogs, id }) => {\n  return (\n    <tr>\n      <td><Link to={`/users/${id}`}>{name}</Link></td>\n      <td>{blogs.length}</td>\n    </tr>\n  )\n}\n\nexport default Users","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst UserDetailed = ({ user }) => {\n  const blogs = useSelector(state => state.blogs)\n\n  if (user) {\n    return (\n      <div>\n        <h3>{user.name}</h3>\n        <h4>added blogs</h4>\n        <ul>\n          {blogs\n            .filter(b => b.user.id === user.id)\n            .map(b => <li key={b.id}>{b.title}</li>)\n          }\n        </ul>\n      </div>\n    )\n  } else {\n    return (\n      <p>User ID not found</p>\n    )\n  }\n}\n\nexport default UserDetailed","import React from 'react'\n// import PropTypes from 'prop-types'\n\nconst Blog = ({ blog, user, likeBlog, removeBlog }) => {\n  if (!blog) {\n    return (\n      <p>\n        Blog ID not found\n      </p>\n    )\n  }\n\n  const handleLike = async event => {\n    event.preventDefault()\n    await likeBlog(blog)\n  }\n\n  const handleRemove = async event => {\n    event.preventDefault()\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\n      await removeBlog(blog)\n    }\n  }\n\n  const isPoster = () => user.username === blog.user.username\n\n  const showToPoster = { display: isPoster() ? '' : 'none' }\n\n  return (\n    <div className=\"detailedBlogInfo\">\n      <h3>{blog.title}</h3>\n      <div>\n        <a href={'https://' + blog.url}>{blog.url}</a>\n      </div>\n      <div className=\"blogLikes\">\n        {blog.likes} likes\n        <button onClick={handleLike}>like</button>\n      </div>\n      <div>\n        added by {blog.user.name}\n      </div>\n      <div style={showToPoster}>\n        <button onClick={handleRemove}>remove</button>\n      </div>\n    </div>\n  )\n}\n\n// export const LegacyBlog = ({ blog, user, likeBlog, removeBlog }) => {\n//   console.log(blog)\n//   const [detailed, setDetailed] = useState(false)\n\n//   const toggleDetail = event => {\n//     event.preventDefault()\n//     setDetailed(!detailed)\n//   }\n\n//   const handleLike = async event => {\n//     event.preventDefault()\n//     await likeBlog(blog)\n//   }\n\n//   const handleRemove = async event => {\n//     event.preventDefault()\n//     if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`)) {\n//       await removeBlog(blog)\n//     }\n//   }\n\n//   const isPoster = () => user.username === blog.user.username\n\n//   const showWhenDetailed = { display: detailed ? '' : 'none' }\n//   const showToPosterWhenDetailed = { display: detailed && isPoster() ? '' : 'none' }\n\n//   const blogStyle = {\n//     paddingTop: 10,\n//     paddingLeft: 2,\n//     border: 'solid',\n//     borderWidth: 1,\n//     marginBottom: 5\n//   }\n\n//   return (\n//     <div style={blogStyle} className=\"blog\">\n//       <div className=\"basicBlogInfo\">\n//         {blog.title} {blog.author}\n//         <button onClick={toggleDetail}>{detailed ? 'hide' : 'view'}</button>\n//       </div>\n\n//       <div style={showWhenDetailed} className=\"detailedBlogInfo\">\n//         <div>\n//           {blog.url}\n//         </div>\n\n//         <div className=\"blogLikes\">\n//           likes <span>{blog.likes}</span>\n//           <button onClick={handleLike}>like</button>\n//         </div>\n\n//         <div>\n//           {blog.user.name}\n//         </div>\n\n//         <div style={showToPosterWhenDetailed}>\n//           <button onClick={handleRemove}>remove</button>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n// LegacyBlog.propTypes = {\n//   blog: PropTypes.object.isRequired,\n//   likeBlog: PropTypes.func.isRequired,\n//   removeBlog: PropTypes.func.isRequired,\n// }\n\nexport default Blog","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ActiveUserStatus = ({ user, logout }) => (\n  <div style={{ display: 'inline' }}>\n    {user.name} logged in<button onClick={logout}>logout</button>\n  </div>\n)\n\nconst Navbar = ({ user, logout }) => {\n  const navbarStyle = {\n    listStyleType: 'none',\n    margin: 0,\n    padding: '10px',\n    backgroundColor: 'lightgrey',\n  }\n  const navbarItemStyle = {\n    display: 'inline',\n    padding: '5px',\n  }\n  return (\n    <ul style={navbarStyle}>\n      <li style={navbarItemStyle}>\n        <Link to=\"/blogs\">blogs</Link>\n      </li>\n      <li style={navbarItemStyle}>\n        <Link to=\"/users\">users</Link>\n      </li>\n      <li style={navbarItemStyle}>\n        <ActiveUserStatus user={user} logout={logout} />\n      </li>\n    </ul>\n  )\n}\n\nexport default Navbar","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst setToken = newToken => token = `bearer ${newToken}`\n\nconst submit = async blog => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, blog, config)\n  return response.data\n}\n\nconst like = async blog => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const newBlog = {\n    ...blog,\n    likes: blog.likes + 1,\n  }\n\n  const response = await axios.put(`${baseUrl}/${blog.id}`, newBlog, config)\n  return response.data\n}\n\nconst deleteBlog = async blog => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${blog.id}`, config)\n  return response.data\n}\n\nexport default { getAll, setToken, submit, like, deleteBlog }","const initialState = {\n  contents: {\n    text: 'Welcome to Bloglist!',\n    success: true,\n  },\n  isShowing: true\n}\n\n// WIP: fix the bug for multiple notifications disappearing too soon\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SHOW_NOTIF':\n      return {\n        contents: action.data,\n        isShowing: true,\n      }\n    case 'HIDE_NOTIF':\n      return {\n        contents: undefined,\n        isShowing: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport const showNotification = (contents, time = 2500) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(hideNotification())\n    }, time)\n    dispatch({\n      type: 'SHOW_NOTIF',\n      data: contents,\n    })\n  }\n}\n\nexport const hideNotification = () => {\n  return {\n    type: 'HIDE_NOTIF'\n  }\n}\n\nexport default notificationReducer","import blogService from '../services/blogs'\nimport { showNotification } from './notificationReducer'\n\nconst byDescendingLikes = (b1, b2) => b2.likes - b1.likes\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_BLOGS':\n      return action.data\n    case 'CREATE_BLOG':\n      return state.concat(action.data)\n    case 'LIKE_BLOG':\n      return state\n        .map(b => b.id === action.data.id\n          ? { ...b, likes: b.likes + 1 }\n          : b\n        )\n        .sort(byDescendingLikes)\n    case 'DELETE_BLOG':\n      return state\n        .filter(b => b.id !== action.data.id)\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = (await blogService.getAll())\n      .sort(byDescendingLikes)\n    dispatch({\n      type: 'SET_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const setBlogs = blogs => {\n  return dispatch => {\n    const sortedBlogs = blogs.sort(byDescendingLikes)\n    dispatch({\n      type: 'SET_BLOGS',\n      data: sortedBlogs\n    })\n  }\n}\n\n/**\n * Adds new blog to store only\n */\nexport const createBlog = blog => {\n  return dispatch => {\n    dispatch({\n      type: 'CREATE_BLOG',\n      data: blog\n    })\n  }\n}\n\n/**\n * Adds new blog to backend and store\n */\nexport const submitBlog = (newBlog, user) => {\n  return async dispatch => {\n    try {\n      const blog = await blogService.submit(newBlog)\n      console.log('blog submitted', blog)\n      dispatch(createBlog({ ...blog, user: user })) /* Workaround to save user data */\n\n      if (blog) {\n        dispatch(\n          showNotification({ success: true, text: `${blog.title} added` })\n        )\n      } else {\n        dispatch(\n          showNotification({ success: false, text: 'blog creation failed' })\n        )\n      }\n    } catch {\n      console.log('blog submission failed')\n      dispatch(\n        showNotification({ success: false, text: 'blog creation failed' })\n      )\n    }\n  }\n}\n\nexport const likeBlog = blog => {\n  return async dispatch => {\n    const likedBlog = await blogService.like(blog)\n    if (!likedBlog) {\n      dispatch(\n        showNotification({ success: false, text: `${blog.title} does not exist` })\n      )\n    } else {\n      dispatch(\n        showNotification({ success: true, text: `${blog.title} liked` })\n      )\n    }\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: blog\n    })\n  }\n}\n\nexport const deleteBlog = blog => {\n  return async dispatch => {\n    await blogService.deleteBlog(blog)\n    dispatch(\n      showNotification({ success: true, text: `${blog.title} deleted` })\n    )\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blog\n    })\n  }\n}\n\nexport default blogReducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { initializeBlogs } from './blogReducer'\nimport { showNotification } from './notificationReducer'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setUser = newUser => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const checkIfUserLoggedIn = () => {\n  return dispatch => {\n    const currentUserJSON = window.localStorage.getItem('currentBloglistUser')\n\n    if (currentUserJSON) {\n      const user = JSON.parse(currentUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n      console.log('user found:', user.username)\n    } else {\n      console.log('user not found')\n    }\n\n    dispatch(initializeBlogs())\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem('currentBloglistUser', JSON.stringify(user))\n\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n      dispatch(\n        showNotification({ success: true, text: `logged in as ${user.username}` })\n      )\n    } catch (exception) {\n      console.log('login failed')\n      dispatch(\n        showNotification({ success: false, text: 'wrong username or password' })\n      )\n    }\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch(setUser(null))\n\n    window.localStorage.removeItem('currentBloglistUser')\n    dispatch(\n      showNotification({ success: true, text: 'logged out' })\n    )\n  }\n}\n\nexport default userReducer","import React, { useState, useEffect, useRef } from 'react'\n\nimport LoginForm from './components/LoginForm'\nimport BlogList from './components/BlogList'\nimport NewBlogForm from './components/NewBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport Users from './components/Users'\nimport UserDetailed from './components/UserDetailed'\nimport Blog from './components/Blog'\nimport Navbar from './components/Navbar'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  likeBlog, deleteBlog, submitBlog\n} from './reducers/blogReducer'\nimport {\n  checkIfUserLoggedIn, login, logout\n} from './reducers/userReducer'\n\nimport {\n  Switch, Route, useRouteMatch\n} from 'react-router-dom'\n\n\nconst App = () => {\n  // blogs\n  const blogs = useSelector(state => state.blogs)\n  // authentication\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const user = useSelector(state => state.user)\n  // notification state\n  const notification = useSelector(state => state.notification)\n  // all users\n  const users = useSelector(state => state.users)\n  // redux dispatch\n  const dispatch = useDispatch()\n\n  const newBlogFormTogglable = useRef()\n  const newBlogForm = useRef()\n\n  const matchingUserId = useRouteMatch('/users/:id')\n  const userDetailedId = matchingUserId\n    ? users.find(u => u.id === matchingUserId.params.id)\n    : null\n  const matchingBlogId = useRouteMatch('/blogs/:id')\n  const matchingBlog = matchingBlogId\n    ? blogs.find(b => b.id === matchingBlogId.params.id)\n    : null\n\n  useEffect(() => {\n    dispatch(checkIfUserLoggedIn())\n  }, [])\n\n  const handleLogin = async event => {\n    event.preventDefault()\n    dispatch(login(username, password))\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleLogout = event => {\n    event.preventDefault()\n    dispatch(logout())\n    newBlogForm.current.setTitle('')\n    newBlogForm.current.setAuthor('')\n    newBlogForm.current.setUrl('')\n  }\n\n  const handleSubmitBlog = async blog => {\n    dispatch(submitBlog(blog, user))\n    newBlogForm.current.setTitle('')\n    newBlogForm.current.setAuthor('')\n    newBlogForm.current.setUrl('')\n  }\n\n  const handleLikeBlog = async blog => {\n    dispatch(likeBlog(blog))\n  }\n\n  const handleRemoveBlog = async blog => {\n    dispatch(deleteBlog(blog))\n  }\n\n\n  return user ?\n    (\n      <div>\n        <Navbar user={user} logout={handleLogout} />\n        <h2>Blogs</h2>\n\n        <Notification {...notification} />\n        <Switch>\n          <Route path=\"/users/:id\">\n            <UserDetailed user={userDetailedId} />\n          </Route>\n\n          <Route path=\"/users\">\n            <h3>Users</h3>\n            <Users />\n          </Route>\n\n          <Route path=\"/blogs/:id\">\n            <Blog\n              blog={matchingBlog}\n              user={user}\n              likeBlog={handleLikeBlog}\n              removeblog={handleRemoveBlog}\n            />\n          </Route>\n\n          <Route path=\"/\">\n            <Togglable buttonLabel=\"create new blog\" ref={newBlogFormTogglable}>\n              <h3>Create new</h3>\n              <NewBlogForm submitBlog={handleSubmitBlog} ref={newBlogForm} />\n            </Togglable>\n            <BlogList\n              blogs={blogs}\n            />\n          </Route>\n        </Switch>\n      </div>\n    ) :\n    (\n      <div>\n        <h2>Login</h2>\n        <Notification {...notification} />\n        <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n      </div>\n    )\n}\n\nexport default App","// import\nimport { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogReducer,\n  user: userReducer,\n  users: usersReducer,\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}